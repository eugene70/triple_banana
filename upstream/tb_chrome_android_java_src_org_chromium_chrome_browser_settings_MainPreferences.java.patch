diff --git tb/chrome/android/java/src/org/chromium/chrome/browser/settings/MainPreferences.java tb_diff/chrome/android/java/src/org/chromium/chrome/browser/settings/MainPreferences.java
--- tb/chrome/android/java/src/org/chromium/chrome/browser/settings/MainPreferences.java
+++ tb_diff/chrome/android/java/src/org/chromium/chrome/browser/settings/MainPreferences.java
@@ -7,7 +7,6 @@ package org.chromium.chrome.browser.settings;
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
-import android.os.Handler;
 import android.provider.Settings;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceFragmentCompat;
@@ -31,9 +30,7 @@ import org.chromium.chrome.browser.settings.datareduction.DataReductionPreferenc
 import org.chromium.chrome.browser.settings.developer.DeveloperSettings;
 import org.chromium.chrome.browser.settings.sync.SignInPreference;
 import org.chromium.chrome.browser.settings.sync.SyncPreferenceUtils;
-import org.chromium.chrome.browser.signin.IdentityServicesProvider;
 import org.chromium.chrome.browser.signin.SigninManager;
-import org.chromium.chrome.browser.sync.ProfileSyncService;
 import org.chromium.components.search_engines.TemplateUrl;
 import org.chromium.components.search_engines.TemplateUrlService;
 
@@ -43,12 +40,8 @@ import java.util.Map;
 /**
  * The main settings screen, shown when the user first opens Settings.
  */
-public class MainPreferences extends PreferenceFragmentCompat
-        implements TemplateUrlService.LoadListener, ProfileSyncService.SyncStateChangedListener,
-                   SigninManager.SignInStateObserver {
-    public static final String PREF_ACCOUNT_SECTION = "account_section";
-    public static final String PREF_SIGN_IN = "sign_in";
-    public static final String PREF_SYNC_AND_SERVICES = "sync_and_services";
+public class MainPreferences
+        extends PreferenceFragmentCompat implements TemplateUrlService.LoadListener {
     public static final String PREF_SEARCH_ENGINE = "search_engine";
     public static final String PREF_SAVED_PASSWORDS = "saved_passwords";
     public static final String PREF_HOMEPAGE = "homepage";
@@ -67,7 +60,6 @@ public class MainPreferences extends PreferenceFragmentCompat
 
     private final ManagedPreferenceDelegate mManagedPreferenceDelegate;
     private final Map<String, Preference> mAllPreferences = new HashMap<>();
-    private SignInPreference mSignInPreference;
 
     public MainPreferences() {
         setHasOptionsMenu(true);
@@ -88,40 +80,6 @@ public class MainPreferences extends PreferenceFragmentCompat
     }
 
     @Override
-    public void onDestroy() {
-        super.onDestroy();
-        mSignInPreference.onPreferenceFragmentDestroyed();
-    }
-
-    @Override
-    public void onStart() {
-        super.onStart();
-        SigninManager signinManager = IdentityServicesProvider.getSigninManager();
-        if (signinManager.isSigninSupported()) {
-            signinManager.addSignInStateObserver(this);
-            mSignInPreference.registerForUpdates();
-        }
-        ProfileSyncService syncService = ProfileSyncService.get();
-        if (syncService != null) {
-            syncService.addSyncStateChangedListener(this);
-        }
-    }
-
-    @Override
-    public void onStop() {
-        super.onStop();
-        SigninManager signinManager = IdentityServicesProvider.getSigninManager();
-        if (signinManager.isSigninSupported()) {
-            signinManager.removeSignInStateObserver(this);
-            mSignInPreference.unregisterForUpdates();
-        }
-        ProfileSyncService syncService = ProfileSyncService.get();
-        if (syncService != null) {
-            syncService.removeSyncStateChangedListener(this);
-        }
-    }
-
-    @Override
     public void onResume() {
         super.onResume();
         updatePreferences();
@@ -131,8 +89,6 @@ public class MainPreferences extends PreferenceFragmentCompat
         SettingsUtils.addPreferencesFromResource(this, R.xml.main_preferences);
         cachePreferences();
 
-        mSignInPreference.setOnStateChangedCallback(this::onSignInPreferenceStateChanged);
-
         updatePasswordsPreference();
 
         setManagedPreferenceDelegateForPreference(PREF_SEARCH_ENGINE);
@@ -190,7 +146,6 @@ public class MainPreferences extends PreferenceFragmentCompat
             Preference preference = getPreferenceScreen().getPreference(index);
             mAllPreferences.put(preference.getKey(), preference);
         }
-        mSignInPreference = (SignInPreference) mAllPreferences.get(PREF_SIGN_IN);
     }
 
     private void setManagedPreferenceDelegateForPreference(String key) {
@@ -199,13 +154,6 @@ public class MainPreferences extends PreferenceFragmentCompat
     }
 
     private void updatePreferences() {
-        if (IdentityServicesProvider.getSigninManager().isSigninSupported()) {
-            addPreferenceIfAbsent(PREF_SIGN_IN);
-        } else {
-            removePreferenceIfPresent(PREF_SIGN_IN);
-        }
-
-        updateSyncAndServicesPreference();
         updateSearchEnginePreference();
 
         Preference homepagePref = addPreferenceIfAbsent(PREF_HOMEPAGE);
@@ -239,13 +187,6 @@ public class MainPreferences extends PreferenceFragmentCompat
         if (preference != null) getPreferenceScreen().removePreference(preference);
     }
 
-    private void updateSyncAndServicesPreference() {
-        ChromeBasePreference syncAndServices =
-                (ChromeBasePreference) findPreference(PREF_SYNC_AND_SERVICES);
-        syncAndServices.setIcon(SyncPreferenceUtils.getSyncStatusIcon(getActivity()));
-        syncAndServices.setSummary(SyncPreferenceUtils.getSyncStatusSummary(getActivity()));
-    }
-
     private void updateSearchEnginePreference() {
         if (!TemplateUrlServiceFactory.get().isLoaded()) {
             ChromeBasePreference searchEnginePref =
@@ -277,28 +218,6 @@ public class MainPreferences extends PreferenceFragmentCompat
         pref.setSummary(isOn ? R.string.text_on : R.string.text_off);
     }
 
-    // SigninManager.SignInStateObserver implementation.
-    @Override
-    public void onSignedIn() {
-        // After signing in or out of a managed account, preferences may change or become enabled
-        // or disabled.
-        new Handler().post(() -> updatePreferences());
-    }
-
-    @Override
-    public void onSignedOut() {
-        updatePreferences();
-    }
-
-    private void onSignInPreferenceStateChanged() {
-        // Remove "Account" section header if the personalized sign-in promo is shown.
-        if (mSignInPreference.getState() == SignInPreference.State.PERSONALIZED_PROMO) {
-            removePreferenceIfPresent(PREF_ACCOUNT_SECTION);
-        } else {
-            addPreferenceIfAbsent(PREF_ACCOUNT_SECTION);
-        }
-    }
-
     // TemplateUrlService.LoadListener implementation.
     @Override
     public void onTemplateUrlServiceLoaded() {
@@ -306,11 +225,6 @@ public class MainPreferences extends PreferenceFragmentCompat
         updateSearchEnginePreference();
     }
 
-    @Override
-    public void syncStateChanged() {
-        updateSyncAndServicesPreference();
-    }
-
     @VisibleForTesting
     ManagedPreferenceDelegate getManagedPreferenceDelegateForTest() {
         return mManagedPreferenceDelegate;
