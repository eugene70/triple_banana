diff --git triple_banana/components/password_manager/core/browser/password_form_manager.cc triple_banana_change/components/password_manager/core/browser/password_form_manager.cc
index 3f19991cc58c..e5e278bf6e99 100644
--- triple_banana/components/password_manager/core/browser/password_form_manager.cc
+++ triple_banana_change/components/password_manager/core/browser/password_form_manager.cc
@@ -30,6 +30,11 @@
 #include "components/password_manager/core/browser/password_manager_util.h"
 #include "components/password_manager/core/browser/statistics_table.h"
 
+#if defined(ENABLE_TRIPLE_BANANA)
+#include "base/strings/string_number_conversions.h"
+#include "crypto/sha2.h"
+#endif
+
 using autofill::FormData;
 using autofill::FormFieldData;
 using autofill::FormSignature;
@@ -807,6 +812,9 @@ PasswordFormManager::PasswordFormManager(
                                     true /* should_migrate_http_passwords */)),
       form_fetcher_(form_fetcher ? form_fetcher : owned_form_fetcher_.get()),
       form_saver_(std::move(form_saver)),
+#if defined(ENABLE_TRIPLE_BANANA)
+      encrypter_(AutoBind(encrypter::mojom::EncrypterManager)),
+#endif
       // TODO(https://crbug.com/831123): set correctly
       // |is_possible_change_password_form| in |votes_uploader_| constructor
       votes_uploader_(client, false /* is_possible_change_password_form */) {
@@ -926,6 +934,22 @@ void PasswordFormManager::CreatePendingCredentials() {
       pending_credentials_.signon_realm = parsed_submitted_form_->signon_realm;
       pending_credentials_.action = parsed_submitted_form_->action;
     }
+#if defined(ENABLE_TRIPLE_BANANA)
+    const std::string hashed_new_password =
+        crypto::SHA256HashString(base::UTF16ToUTF8(password_to_save.first));
+    encrypter_->GetEncryptedDataFromCipherText(
+        base::UTF16ToUTF8(pending_credentials_.password_value),
+        base::BindOnce(
+            [](PasswordFormManager* password_form_manager,
+               const std::string& hashed_new_password,
+               encrypter::mojom::EncryptedDataPtr encrypted_data) {
+              if (hashed_new_password == encrypted_data->hashed_text)
+                password_form_manager->SetPasswordOverridden(false);
+            },
+            this,
+            base::ToLowerASCII(base::HexEncode(hashed_new_password.c_str(),
+                                               hashed_new_password.size()))));
+#endif
   } else {
     is_new_login_ = true;
     // No stored credentials can be matched to the submitted form. Offer to
-- 
2.23.0

