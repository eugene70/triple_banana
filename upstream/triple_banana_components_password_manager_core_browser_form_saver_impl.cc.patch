diff --git triple_banana/components/password_manager/core/browser/form_saver_impl.cc triple_banana_change/components/password_manager/core/browser/form_saver_impl.cc
index a2cbc58..f58b7a0 100644
--- triple_banana/components/password_manager/core/browser/form_saver_impl.cc
+++ triple_banana_change/components/password_manager/core/browser/form_saver_impl.cc
@@ -14,6 +14,8 @@
 #include "components/password_manager/core/browser/password_store.h"
 #include "google_apis/gaia/gaia_auth_util.h"
 #include "google_apis/gaia/gaia_urls.h"
+#include "triple_banana/modules/public/connector.h"
+#include "triple_banana/modules/public/coroutine.h"
 #include "url/gurl.h"
 #include "url/origin.h"
 
@@ -87,7 +89,8 @@ void PostProcessMatches(const PasswordForm& pending,
 
 }  // namespace
 
-FormSaverImpl::FormSaverImpl(PasswordStore* store) : store_(store) {
+FormSaverImpl::FormSaverImpl(PasswordStore* store)
+    : store_(store), encrypter_(AutoBind(encrypter::mojom::EncrypterManager)) {
   DCHECK(store);
 }
 
@@ -106,9 +109,16 @@ void FormSaverImpl::Save(PasswordForm pending,
                          const std::vector<const PasswordForm*>& matches,
                          const base::string16& old_password) {
   SanitizeFormData(&pending.form_data);
+  std::string encrypted_password;
+  co_begin();
+  encrypter_->Initialize("weblogin_v01", false);
+  encrypted_password = co_await(const std::string&, encrypter_->Encrypt,
+                                base::UTF16ToUTF8(pending.password_value));
+  pending.password_value = base::UTF8ToUTF16(encrypted_password);
   store_->AddLogin(pending);
   // Update existing matches in the password store.
   PostProcessMatches(pending, matches, old_password, store_);
+  co_return();
 }
 
 void FormSaverImpl::Update(
@@ -116,9 +126,16 @@ void FormSaverImpl::Update(
     const std::vector<const autofill::PasswordForm*>& matches,
     const base::string16& old_password) {
   SanitizeFormData(&pending.form_data);
+  std::string encrypted_password;
+  co_begin();
+  encrypter_->Initialize("weblogin_v01", false);
+  encrypted_password = co_await(const std::string&, encrypter_->Encrypt,
+                                base::UTF16ToUTF8(pending.password_value));
+  pending.password_value = base::UTF8ToUTF16(encrypted_password);
   store_->UpdateLogin(pending);
   // Update existing matches in the password store.
   PostProcessMatches(pending, matches, old_password, store_);
+  co_return();
 }
 
 void FormSaverImpl::UpdateReplace(
