diff --git triple_banana/components/password_manager/core/browser/form_saver_impl.cc triple_banana_change/components/password_manager/core/browser/form_saver_impl.cc
index a2cbc58..bedf0e0 100644
--- triple_banana/components/password_manager/core/browser/form_saver_impl.cc
+++ triple_banana_change/components/password_manager/core/browser/form_saver_impl.cc
@@ -87,7 +87,12 @@ void PostProcessMatches(const PasswordForm& pending,
 
 }  // namespace
 
+#if defined(ENABLE_TRIPLE_BANANA)
+FormSaverImpl::FormSaverImpl(PasswordStore* store)
+    : store_(store), encrypter_(AutoBind(encrypter::mojom::EncrypterManager)) {
+#else
 FormSaverImpl::FormSaverImpl(PasswordStore* store) : store_(store) {
+#endif
   DCHECK(store);
 }
 
@@ -106,9 +111,19 @@ void FormSaverImpl::Save(PasswordForm pending,
                          const std::vector<const PasswordForm*>& matches,
                          const base::string16& old_password) {
   SanitizeFormData(&pending.form_data);
+#if defined(ENABLE_TRIPLE_BANANA)
+  std::string encrypted_password;
+  co_begin();
+  encrypted_password = co_await(const std::string&, encrypter_->Encrypt,
+                                base::UTF16ToUTF8(pending.password_value));
+  pending.password_value = base::UTF8ToUTF16(encrypted_password);
+#endif
   store_->AddLogin(pending);
   // Update existing matches in the password store.
   PostProcessMatches(pending, matches, old_password, store_);
+#if defined(ENABLE_TRIPLE_BANANA)
+  co_return();
+#endif
 }
 
 void FormSaverImpl::Update(
@@ -116,9 +131,19 @@ void FormSaverImpl::Update(
     const std::vector<const autofill::PasswordForm*>& matches,
     const base::string16& old_password) {
   SanitizeFormData(&pending.form_data);
+#if defined(ENABLE_TRIPLE_BANANA)
+  std::string encrypted_password;
+  co_begin();
+  encrypted_password = co_await(const std::string&, encrypter_->Encrypt,
+                                base::UTF16ToUTF8(pending.password_value));
+  pending.password_value = base::UTF8ToUTF16(encrypted_password);
+#endif
   store_->UpdateLogin(pending);
   // Update existing matches in the password store.
   PostProcessMatches(pending, matches, old_password, store_);
+#if defined(ENABLE_TRIPLE_BANANA)
+  co_return();
+#endif
 }
 
 void FormSaverImpl::UpdateReplace(
