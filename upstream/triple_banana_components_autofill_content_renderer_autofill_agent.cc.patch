diff --git triple_banana/components/autofill/content/renderer/autofill_agent.cc triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
index 7b88634..9be1997 100644
--- triple_banana/components/autofill/content/renderer/autofill_agent.cc
+++ triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
@@ -46,6 +46,7 @@
 #include "net/cert/cert_status_flags.h"
 #include "services/service_manager/public/cpp/interface_provider.h"
 #include "third_party/blink/public/common/associated_interfaces/associated_interface_provider.h"
+#include "third_party/blink/public/platform/web_coalesced_input_event.h"
 #include "third_party/blink/public/platform/web_keyboard_event.h"
 #include "third_party/blink/public/platform/web_url_request.h"
 #include "third_party/blink/public/web/web_ax_object.h"
@@ -59,6 +60,9 @@
 #include "third_party/blink/public/web/web_option_element.h"
 #include "third_party/blink/public/web/web_user_gesture_indicator.h"
 #include "third_party/blink/public/web/web_view.h"
+#include "third_party/blink/public/web/web_widget.h"
+#include "triple_banana/modules/public/connector.h"
+#include "triple_banana/modules/public/coroutine.h"
 #include "ui/base/l10n/l10n_util.h"
 #include "ui/events/keycodes/keyboard_codes.h"
 
@@ -545,12 +549,36 @@ void AutofillAgent::AcceptDataListSuggestion(const base::string16& value) {
 
 void AutofillAgent::FillPasswordSuggestion(const base::string16& username,
                                            const base::string16& password) {
+  co_begin();
+
   if (element_.IsNull())
     return;
 
+  static auto manager = triple_banana::BindInterfaceOnRenderer<
+      authentication::mojom::AuthenticationManager>();
+  if (!co_await(manager->Authenticate, bool) || !password_autofill_agent_)
+    return;
+
   bool handled =
       password_autofill_agent_->FillSuggestion(element_, username, password);
-  DCHECK(handled);
+  if (!handled || !render_frame() || !render_frame()->GetRenderView())
+    return;
+
+  blink::WebWidget* web_widget =
+      render_frame()->GetRenderView()->GetWebView()->MainFrameWidget();
+  if (!web_widget)
+    return;
+
+  blink::WebKeyboardEvent keyboard_event;
+  keyboard_event.windows_key_code = ui::VKEY_RETURN;
+  keyboard_event.SetModifiers(blink::WebInputEvent::kIsKeyPad);
+  keyboard_event.text[0] = ui::VKEY_RETURN;
+  keyboard_event.SetType(blink::WebInputEvent::kKeyDown);
+  web_widget->HandleInputEvent(blink::WebCoalescedInputEvent(keyboard_event));
+  keyboard_event.SetType(blink::WebInputEvent::kKeyUp);
+  web_widget->HandleInputEvent(blink::WebCoalescedInputEvent(keyboard_event));
+
+  co_return();
 }
 
 void AutofillAgent::PreviewPasswordSuggestion(const base::string16& username,
