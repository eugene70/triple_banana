diff --git triple_banana/components/autofill/content/renderer/autofill_agent.cc triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
index 5c479361950f..31afc6dead6b 100644
--- triple_banana/components/autofill/content/renderer/autofill_agent.cc
+++ triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
@@ -46,6 +46,7 @@
 #include "net/cert/cert_status_flags.h"
 #include "services/service_manager/public/cpp/interface_provider.h"
 #include "third_party/blink/public/common/associated_interfaces/associated_interface_provider.h"
+#include "third_party/blink/public/platform/web_coalesced_input_event.h"
 #include "third_party/blink/public/platform/web_keyboard_event.h"
 #include "third_party/blink/public/platform/web_url_request.h"
 #include "third_party/blink/public/web/web_ax_object.h"
@@ -59,6 +60,8 @@
 #include "third_party/blink/public/web/web_option_element.h"
 #include "third_party/blink/public/web/web_user_gesture_indicator.h"
 #include "third_party/blink/public/web/web_view.h"
+#include "third_party/blink/public/web/web_widget.h"
+#include "triple_banana/modules/public/interfaces.h"
 #include "ui/base/l10n/l10n_util.h"
 #include "ui/events/keycodes/keyboard_codes.h"
 
@@ -544,12 +547,35 @@ void AutofillAgent::AcceptDataListSuggestion(const base::string16& value) {
 
 void AutofillAgent::FillPasswordSuggestion(const base::string16& username,
                                            const base::string16& password) {
+  co_begin();
+
   if (element_.IsNull())
     return;
 
+  static auto manager = AutoBind(authentication::mojom::AuthenticationManager);
+  if (!co_await(bool, manager->Authenticate) || !password_autofill_agent_)
+    return;
+
   bool handled =
       password_autofill_agent_->FillSuggestion(element_, username, password);
-  DCHECK(handled);
+  if (!handled || !render_frame() || !render_frame()->GetRenderView())
+    return;
+
+  blink::WebWidget* web_widget =
+      render_frame()->GetRenderView()->GetWebView()->MainFrameWidget();
+  if (!web_widget)
+    return;
+
+  blink::WebKeyboardEvent keyboard_event;
+  keyboard_event.windows_key_code = ui::VKEY_RETURN;
+  keyboard_event.SetModifiers(blink::WebInputEvent::kIsKeyPad);
+  keyboard_event.text[0] = ui::VKEY_RETURN;
+  keyboard_event.SetType(blink::WebInputEvent::kKeyDown);
+  web_widget->HandleInputEvent(blink::WebCoalescedInputEvent(keyboard_event));
+  keyboard_event.SetType(blink::WebInputEvent::kKeyUp);
+  web_widget->HandleInputEvent(blink::WebCoalescedInputEvent(keyboard_event));
+
+  co_return();
 }
 
 void AutofillAgent::PreviewPasswordSuggestion(const base::string16& username,
diff --git triple_banana/components/autofill/content/renderer/autofill_agent.cc triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
index 31afc6dead6b..4d06b2279560 100644
--- triple_banana/components/autofill/content/renderer/autofill_agent.cc
+++ triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
@@ -146,7 +146,8 @@ AutofillAgent::AutofillAgent(content::RenderFrame* render_frame,
       is_generation_popup_possibly_visible_(false),
       is_user_gesture_required_(true),
       is_secure_context_required_(false),
-      form_tracker_(render_frame) {
+      form_tracker_(render_frame),
+      manager_(AutoBind(authentication::mojom::AuthenticationManager)) {
   render_frame->GetWebFrame()->SetAutofillClient(this);
   password_autofill_agent->SetAutofillAgent(this);
   AddFormObserver(this);
@@ -552,8 +553,7 @@ void AutofillAgent::FillPasswordSuggestion(const base::string16& username,
   if (element_.IsNull())
     return;
 
-  static auto manager = AutoBind(authentication::mojom::AuthenticationManager);
-  if (!co_await(bool, manager->Authenticate) || !password_autofill_agent_)
+  if (!co_await(bool, manager_->Authenticate) || !password_autofill_agent_)
     return;
 
   bool handled =
