diff --git triple_banana/components/autofill/content/renderer/autofill_agent.cc triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
index e372068..6d8b163 100644
--- triple_banana/components/autofill/content/renderer/autofill_agent.cc
+++ triple_banana_change/components/autofill/content/renderer/autofill_agent.cc
@@ -64,6 +64,11 @@
 #include "ui/base/l10n/l10n_util.h"
 #include "ui/events/keycodes/keyboard_codes.h"
 
+#if defined(ENABLE_TRIPLE_BANANA)
+#include "third_party/blink/public/platform/web_coalesced_input_event.h"
+#include "third_party/blink/public/web/web_widget.h"
+#endif
+
 using blink::WebAutofillClient;
 using blink::WebAutofillState;
 using blink::WebAXObject;
@@ -145,6 +150,9 @@ AutofillAgent::AutofillAgent(content::RenderFrame* render_frame,
       is_generation_popup_possibly_visible_(false),
       is_user_gesture_required_(true),
       is_secure_context_required_(false),
+#if defined(ENABLE_TRIPLE_BANANA)
+      manager_(AutoBind(authentication::mojom::AuthenticationManager)),
+#endif
       form_tracker_(render_frame) {
   render_frame->GetWebFrame()->SetAutofillClient(this);
   password_autofill_agent->SetAutofillAgent(this);
@@ -562,12 +570,40 @@ void AutofillAgent::AcceptDataListSuggestion(const base::string16& value) {
 
 void AutofillAgent::FillPasswordSuggestion(const base::string16& username,
                                            const base::string16& password) {
+  co_begin();
+
   if (element_.IsNull())
     return;
 
+#if defined(ENABLE_TRIPLE_BANANA)
+  if (!co_await(bool, manager_->Authenticate) || !password_autofill_agent_)
+    return;
+#endif
+
   bool handled =
       password_autofill_agent_->FillSuggestion(element_, username, password);
+#if defined(ENABLE_TRIPLE_BANANA)
+  if (!handled || !render_frame() || !render_frame()->GetRenderView())
+    return;
+
+  blink::WebWidget* web_widget =
+      render_frame()->GetRenderView()->GetWebView()->MainFrameWidget();
+  if (!web_widget)
+    return;
+
+  blink::WebKeyboardEvent keyboard_event;
+  keyboard_event.windows_key_code = ui::VKEY_RETURN;
+  keyboard_event.SetModifiers(blink::WebInputEvent::kIsKeyPad);
+  keyboard_event.text[0] = ui::VKEY_RETURN;
+  keyboard_event.SetType(blink::WebInputEvent::kKeyDown);
+  web_widget->HandleInputEvent(blink::WebCoalescedInputEvent(keyboard_event));
+  keyboard_event.SetType(blink::WebInputEvent::kKeyUp);
+  web_widget->HandleInputEvent(blink::WebCoalescedInputEvent(keyboard_event));
+
+  co_return();
+#else
   DCHECK(handled);
+#endif
 }
 
 void AutofillAgent::PreviewPasswordSuggestion(const base::string16& username,
