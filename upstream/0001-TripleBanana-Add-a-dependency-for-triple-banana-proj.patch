From b0e573a1cd4d0ec512a9e48bb7c0f731e5bddfe6 Mon Sep 17 00:00:00 2001
From: Jinho Bang <zino@chromium.org>
Date: Mon, 17 Jun 2019 19:36:11 +0900
Subject: [PATCH] TripleBanana: Add a dependency for triple banana project

After this patch, we can build triple_banana target via ninja build.
---
 BUILD.gn                                                          | 1 +
 chrome/android/BUILD.gn                                           | 8 ++++----
 .../java/src/org/chromium/chrome/browser/ChromeActivity.java      | 5 +++++
 .../src/org/chromium/chrome/browser/ChromeTabbedActivity.java     | 1 +
 content/browser/frame_host/render_frame_host_impl.cc              | 1 -
 content/browser/renderer_host/render_process_host_impl.cc         | 1 +
 6 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/BUILD.gn b/BUILD.gn
index 653e1d24..30eb19ca 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -78,6 +78,7 @@ group("gn_all") {
     "//tools/binary_size:binary_size_trybot_py",
     "//tools/ipc_fuzzer:ipc_fuzzer_all",
     "//tools/metrics:metrics_metadata",
+    "//triple_banana:triple_banana",
     "//ui/base:ui_base_unittests",
     "//ui/gfx:gfx_unittests",
     "//url:url_unittests",
diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
index fed5592..c59e57d 100644
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -27,6 +27,7 @@ import("//third_party/icu/config.gni")
 import("//third_party/protobuf/proto_library.gni")
 import("//tools/resources/generate_resource_whitelist.gni")
 import("//tools/v8_context_snapshot/v8_context_snapshot.gni")
+import("//triple_banana/triple_banana.gni")
 import("//ui/android/features.gni")
 import("channel.gni")
 import("java_sources.gni")
@@ -102,8 +103,7 @@ generate_ui_locale_resources("ui_locale_string_resources") {
 android_resources("chrome_app_java_resources") {
   resource_dirs = [
     "java/res",
-    "//chrome/android/java/res_chromium",
-  ]
+  ] + triple_banana_resource
 
   if (enable_android_night_mode) {
     resource_dirs += [ "//chrome/android/java/res_night" ]
@@ -441,7 +441,7 @@ android_library("chrome_java") {
   java_files = chrome_java_sources + [
                  app_hooks_impl,
                  _chrome_version_java_file,
-               ]
+               ] + triple_banana_hooks_sources
 
   # Include sources from feed_java_sources.gni.
   java_files += feed_java_sources
@@ -1066,7 +1066,7 @@ if (enable_vr || enable_arcore) {
 
 # Overrides icon / name defined in chrome_app_java_resources.
 android_resources("chrome_public_apk_resources") {
-  resource_dirs = [ "java/res_chromium" ]
+  resource_dirs = triple_banana_resource
 
   # Dep needed to ensure override works properly.
   deps = [
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
index a31b993..4aa89b8 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
@@ -696,6 +696,11 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
             }
 
             @Override
+            public void onUrlUpdated(Tab tab) {
+                org.triple.banana.hooks_api.ChromeHooks.api.onUrlUpdated(tab);
+            }
+
+            @Override
             public void onCrash(Tab tab) {
                 postDeferredStartupIfNeeded();
             }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
index 402e898..97b776b 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
@@ -1564,6 +1564,7 @@ public class ChromeTabbedActivity
                 commandLine.appendSwitchesAndArguments(args);
             }
         }
+        org.triple.banana.hooks_api.ChromeHooks.api.initCommandLine();
 
         supportRequestWindowFeature(Window.FEATURE_ACTION_MODE_OVERLAY);
 
diff --git a/content/browser/frame_host/render_frame_host_impl.cc b/content/browser/frame_host/render_frame_host_impl.cc
index dd62197..a97f5ed 100644
--- a/content/browser/frame_host/render_frame_host_impl.cc
+++ b/content/browser/frame_host/render_frame_host_impl.cc
@@ -1333,7 +1333,6 @@ void RenderFrameHostImpl::AddMessageToConsole(
 void RenderFrameHostImpl::ExecuteJavaScript(const base::string16& javascript,
                                             JavaScriptResultCallback callback) {
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
-  CHECK(CanExecuteJavaScript());
 
   const bool wants_result = !callback.is_null();
   GetNavigationControl()->JavaScriptExecuteRequest(javascript, wants_result,
diff --git a/content/browser/renderer_host/render_process_host_impl.cc b/content/browser/renderer_host/render_process_host_impl.cc
index e43d9c4..3d2e9cf 100644
--- a/content/browser/renderer_host/render_process_host_impl.cc
+++ b/content/browser/renderer_host/render_process_host_impl.cc
@@ -2874,6 +2874,7 @@ void RenderProcessHostImpl::AppendRendererCommandLine(
       switches::kDeviceScaleFactor,
       base::NumberToString(display::win::GetDPIScale()));
 #endif
+  command_line->AppendSwitch(switches::kDisableMediaSuspend);
 
   AppendCompositorCommandLineFlags(command_line);
 
-- 
2.7.4

