diff --git tb/base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java tb_diff/base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java
--- tb/base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java
+++ tb_diff/base/android/java/src/org/chromium/base/library_loader/LibraryLoader.java
@@ -194,8 +194,13 @@ public class LibraryLoader {
         }
     }
 
+    private boolean useSystemLinker() {
+        // NOTE: We should use system linker by force since N unlike upstream.
+        return mUseChromiumLinker && !mUseModernLinker && Build.VERSION.SDK_INT >= VERSION_CODES.N;
+    }
+
     public boolean useChromiumLinker() {
-        return mUseChromiumLinker;
+        return mUseChromiumLinker && !useSystemLinker();
     }
 
     public boolean useModernLinker() {
@@ -249,10 +254,11 @@ public class LibraryLoader {
         }
     }
 
+    @GuardedBy("mLock")
     private void preloadAlreadyLocked(ApplicationInfo appInfo) {
         try (TraceEvent te = TraceEvent.scoped("LibraryLoader.preloadAlreadyLocked")) {
             // Preloader uses system linker, we shouldn't preload if Chromium linker is used.
-            assert !mUseChromiumLinker;
+            assert !useChromiumLinker();
             if (mLibraryPreloader != null && !mLibraryPreloaderCalled) {
                 mLibraryPreloader.loadLibrary(appInfo);
                 mLibraryPreloaderCalled = true;
@@ -420,8 +426,8 @@ public class LibraryLoader {
                 // Load directly from the APK.
                 boolean is64Bit = ApiHelperForM.isProcess64Bit();
                 String zipFilePath = appInfo.sourceDir;
-                String fullPath =
-                        zipFilePath + "!/" + makeLibraryPathInZipFile(library, false, is64Bit);
+                String fullPath = zipFilePath + "!/"
+                        + makeLibraryPathInZipFile(library, useSystemLinker(), is64Bit);
 
                 Log.i(TAG, "libraryName: %s", fullPath);
                 System.load(fullPath);
@@ -440,7 +446,7 @@ public class LibraryLoader {
 
             long startTime = SystemClock.uptimeMillis();
 
-            if (mUseChromiumLinker && !inZygote) {
+            if (useChromiumLinker() && !inZygote) {
                 Log.d(TAG, "Loading with the Chromium linker.");
                 // See base/android/linker/config.gni, the chromium linker is only enabled when
                 // we have a single library.
