diff --git triple_banana/components/password_manager/content/browser/content_password_manager_driver.cc triple_banana_change/components/password_manager/content/browser/content_password_manager_driver.cc
index 5e2ad8e40c28..cb827c75c713 100644
--- triple_banana/components/password_manager/content/browser/content_password_manager_driver.cc
+++ triple_banana_change/components/password_manager/content/browser/content_password_manager_driver.cc
@@ -64,7 +64,9 @@ ContentPasswordManagerDriver::ContentPasswordManagerDriver(
       password_generation_helper_(client, this),
       password_autofill_manager_(this, autofill_client, client),
       is_main_frame_(render_frame_host->GetParent() == nullptr),
-      password_manager_receiver_(this) {
+      password_manager_receiver_(this),
+      encrypter_(triple_banana::BindInterfaceOnBrowser<
+                 encrypter::mojom::EncrypterManager>()) {
   // For some frames |this| may be instantiated before log manager creation, so
   // here we can not send logging state to renderer process for them. For such
   // cases, after the log manager got ready later,
@@ -137,7 +139,14 @@ void ContentPasswordManagerDriver::GeneratedPasswordAccepted(
 void ContentPasswordManagerDriver::FillSuggestion(
     const base::string16& username,
     const base::string16& password) {
-  GetAutofillAgent()->FillPasswordSuggestion(username, password);
+  std::string decrypted_password;
+  co_begin();
+  encrypter_->Initialize("weblogin_v01", false);
+  decrypted_password = co_await(const std::string&, encrypter_->Decrypt,
+                                base::UTF16ToUTF8(password));
+  GetAutofillAgent()->FillPasswordSuggestion(
+      username, base::UTF8ToUTF16(decrypted_password));
+  co_return();
 }
 
 void ContentPasswordManagerDriver::FillIntoFocusedField(
